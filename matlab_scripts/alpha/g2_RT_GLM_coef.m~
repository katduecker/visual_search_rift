%% Visual Search + RIFT
% Duecker, Shapiro, Hanslmayr, Wolfe, Pan, and Jensen

% d: prep: alpha vs time-on-task!

% Input
% -s : subject index


% Output
% csv file per participant, containing RT and alpha power for each trial 

% [c] Katharina Duecker, katharina.duecker@gmail.com
% last changed/checked 5 Aug 2023

clear all; close all; clc; beep off;

addpath('/rds/projects/j/jenseno-visual-search-rft/fieldtrip')
ft_defaults;

pth = '/rds/projects/j/jenseno-visual-search-rft/Visual Search RFT';

load(fullfile(pth,'matlab scripts/',"preprocessing MEG/",'idx_subjoi.mat'));

alphapth = fullfile(pth,'results','meg','6 Alpha');
outpth = fullfile(alphapth,'GLM of TFR int');
soipth = fullfile(alphapth,'iaf_soi');
plotpth = fullfile(pth,'results','exploratory fig');


addpath(fullfile(pth,'matlab scripts/',"cbrewer/"))
cm = cbrewer('div','RdBu',201);
cm = flipud(cm);

inpth = fullfile(pth,'results','meg','4 split conditions','sinusoid');
load(fullfile(pth,'matlab scripts/',"preprocessing MEG/",'idx_subjoi.mat'));


addpath(fullfile(pth,'matlab scripts/',"cbrewer/"))
cm = cbrewer('qual','Dark2',8);

% %% Check multicollinearity first
% 

% fig = figure('Position',[0 0 1940 1080/2.5]);
% multi_coll_all = zeros(length(reg_short)+1,length(reg_short)+1,31);
% idx_regr = 2:length(reg_short)+1;
% for s = 1:length(subj)
%     
%     load(fullfile(outpth,subj{s},'RT_GLM.mat'),'multi_coll')
%     
%     multi_coll_all(:,:,s) = multi_coll;
%     
%     for i = 2:size(multi_coll,1)
%         subplot(2,4,i-1)
%         sctr = scatter(1:length(reg_short)-1,multi_coll(i,setdiff(idx_regr,i)),'filled','MarkerFaceAlpha',0.5,'MarkerFaceColor',cm(i-1,:));
%         hold on
%         xticks(1:length(reg_short))
%         xlim([0 length(reg_short)])
%         xticklabels(reg_short(setdiff(idx_regr,i)-1))
%         ylim([-1 1])
%         title(['corr ',regr_names{i-1},' with'])
%         xtickangle(45)
% 
%     end
%     
% end
% 

% print(fig,fullfile(plotpth,'multi_collin_condi_model_notz'),'-dpng')



%% First try the small model

regr_names = {'c','guided','target present','tot'};
RT_condi = zeros(length(subj),length(regr_names));
for s = 1:length(subj)
    
    load(fullfile(outpth,subj{s},'RT_GLM_set32.mat'),'T_condi');
    RT_condi(s,:) = T_condi;
    
end

fig = figure;
for r = 1:length(regr_names)
    scatter(repmat(r,length(subj),1),RT_condi(:,r))
    hold on
    xlim([0 6])
    xticks(1:5)
    xticklabels(regr_names)
    xtickangle(45)
end
title('RT GLM regressors')

print(fig,fullfile(plotpth,'RT_GLM_condi_set32'),'-dpng')


%% load template subject

s = 1;
d = dir(fullfile(inpth,subj{s}));
file = {d.name};
file(1:2) = [];

load(fullfile(soipth,subj{s},'iaf_soi.mat'))

load(fullfile(inpth,subj{s},file{1}))

% TFR
winl=0.5;
cfg = [];
cfg.method = 'mtmconvol';
cfg.channel = 'MEGGRAD';
cfg.taper = 'hanning';
cfg.foi = 4:1/winl:30;
cfg.t_ftimwin = ones(length(cfg.foi),1)*winl;
cfg.toi = -1.75:0.05:1;
cfg.keeptrials = 'yes';
cfg.trials = 1;

TFR_alpha = ft_freqanalysis(cfg,data_trig);

cfg = [];
cfg.method = 'sum';
TFR_alpha = ft_combineplanar(cfg,TFR_alpha);

cfg = [];
cfg.latency = [-1.5 0.5];
cfg.avgoverrpt = 'yes';
IAF = ft_selectdata(cfg,TFR_alpha);

% 
clear data_trig

% clear TFR_alpha

IAF = rmfield(IAF,'cfg');


reg_short = {'c','gui','tp','power','tot','slouch'};
regr_names = {'c','guided','target present','power','tot','slouch'};


TFRall = cell(length(regr_names),length(subj));

for s = 1:length(subj)
    
    load(fullfile(outpth,subj{s},'RT_GLM_set32.mat'),'model_T')
    
    for i = 1:length(regr_names)
        IAF.powspctrm(:,:,:) = squeeze(model_T(i,:,:,:));
        
        TFRall{i,s} = IAF;
        
    end
end

% average T's
for i = 1:length(regr_names)
    Tregr{i} = ft_freqgrandaverage([],TFRall{i,:});
end


addpath(fullfile(pth,'matlab scripts/',"cbrewer/"))
cm = cbrewer('div','RdBu',201);
cm = flipud(cm);

fig = figure;
% plot alpha band
cfg = [];
cfg.layout = 'neuromag306cmb_helmet.mat';
cfg.xlim = [-1 0];
cfg.ylim = [8 12];
cfg.commentpos = 'title';
for i = 1:length(regr_names)
    subplot(2,4,i)
    cfg.comment = regr_names{i};
    ft_topoplotTFR(cfg,Tregr{i});
    colormap(cm)
end


print(fig,fullfile(plotpth,'RT_alpha_GLM_set32'),'-dpng')


%% Cluster-based test
close all;

i = 5%1:length(regr_names)
cfg = [];
cfg.keepindividual = 'yes';
cfg.parameter = 'powspctrm';

grand_freq = ft_freqgrandaverage(cfg,TFRall{i,:});

% copy in grad struct from one subject
grand_freq.grad = TFRall{i,15}.grad;

null_hyp = grand_freq;
null_hyp.powspctrm = zeros(size(null_hyp.powspctrm));

cfg = [];
cfg.feedback = 'no';
cfg.method = 'template';
cfg.template = 'neuromag306cmb_neighb.mat';
cfg.neighbours = ft_prepare_neighbours(cfg,grand_freq);

cfg.method           = 'montecarlo';
cfg.minnbchan        = 2;
cfg.statistic        = 'ft_statfun_depsamplesT';
cfg.correctm         = 'cluster';
cfg.clusterstatistic = 'maxsum';
cfg.tail             = -1;
cfg.clustertail      = -1;
cfg.numrandomization = 5000;
cfg.alpha            = 0.05;
cfg.clusteralpha     = 0.05;
cfg.latency          = [-1.0 0.4];
cfg.parameter = 'powspctrm';
design = ones(2,2*length(subj));
design(1,:) = [1:length(subj), 1:length(subj)];
design(2,length(subj)+1:2*length(subj)) = 2;

cfg.design   = design;
cfg.uvar     = 1;
cfg.ivar     = 2;

stat = ft_freqstatistics(cfg,grand_freq,null_hyp);
        
% negative clusters
neg_cluster_pvals = [stat.negclusters(:).prob];
neg_cluster_id = find(neg_cluster_pvals < 0.05);
neg_pos      = ismember(stat.negclusterslabelmat, neg_cluster_id);
neg_cluster = sum(neg_pos(:));

cluster_pos = ismember(stat.negclusterslabelmat, neg_cluster_id);


fig = figure('Position',[0 0 1940 1080]);
f_idx = logical(sum(sum(cluster_pos,3)));
freq = stat.freq(f_idx);

t_idx = find(logical(sum(sum(cluster_pos,2))));

c = 5;
r = ceil(length(t_idx)/c);

h = 0;
for t = t_idx'
    h = h + 1;
    subplot(r,c,h)
    cfg = [];
    cfg.parameter = 'stat';
    cfg.zlim = 'maxabs';
    cfg.highlight = 'on';
    cfg.marker = 'off';
    cfg.layout = 'neuromag306cmb_helmet.mat';
    cfg.xlim = [stat.time(t) stat.time(t)];
    cfg.ylim = [freq(1) freq(end)];
    cfg.highlightchannel = stat.label(logical(sum(cluster_pos(:,f_idx,t),2)));
    cfg.comment = 'xlim';
    cfg.commentpos = 'title';
    cfg.zlim = 'maxabs';
    ft_topoplotTFR(cfg,stat)
    colormap(cm)
    %colorbar
end

print(fig,fullfile(plotpth,'RT_alpha_GLM'),'-dpng')


fig = figure;
chan_idx = logical(sum(sum(cluster_pos,2),3));

cfg = [];
cfg.parameter = 'stat';
cfg.zlim = 'maxabs';
cfg.channel = stat.label(chan_idx);

cfg.layout = 'neuromag306cmb_helmet.mat';

ft_singleplotTFR(cfg,stat)
title('RT alpha regr')
colormap(cm)
print(fig,fullfile(plotpth,'RT_alpha_GLM_regr'),'-dpng')


save(fullfile(plotpth,'GLM_stat_allset_condi_notz.mat'),'stat','Tregr','regr_names')